"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict, Mapping, Sequence, Type, Union

from zope.interface import Interface, implementer, provider

import attr
from hyperlink import DecodedURL
from twisted.python.components import Componentized
from twisted.web.iweb import IRequest

from .interfaces import IDependencyInjector, IRequestLifecycle, IRequiredParameter

"""
Dependency-Injected HTTP metadata.
"""

def urlFromRequest(request: IRequest) -> DecodedURL: ...
@provider(IRequiredParameter, IDependencyInjector)
class RequestURL:
    """
    Require a hyperlink L{DecodedURL} object from a L{Requirer}.

    @since: Klein NEXT
    """

    @classmethod
    def registerInjector(
        cls,
        injectionComponents: Componentized,
        parameterName: str,
        requestLifecycle: IRequestLifecycle,
    ) -> IDependencyInjector: ...
    @classmethod
    def injectValue(
        cls, instance: Any, request: IRequest, routeParams: Dict[str, Any]
    ) -> DecodedURL: ...
    @classmethod
    def finalize(cls) -> None:
        "Nothing to do upon finalization."
        ...

@implementer(IRequiredParameter, IDependencyInjector)
@attr.frozen
class RequestComponent:
    """
    Require a hyperlink L{DecodedURL} object from a L{Requirer}.

    @since: Klein NEXT
    """

    interface: Type[Interface]
    def registerInjector(
        self,
        injectionComponents: Componentized,
        parameterName: str,
        requestLifecycle: IRequestLifecycle,
    ) -> IDependencyInjector: ...
    def injectValue(
        self, instance: Any, request: IRequest, routeParams: Dict[str, Any]
    ) -> DecodedURL: ...
    def finalize(cls) -> None:
        "Nothing to do upon finalization."
        ...

@attr.s(auto_attribs=True, frozen=True)
class Response:
    """
    Metadata about an HTTP response, with an object that Klein knows how to
    understand.

    This includes:

        - an HTTP response code

        - some HTTP headers

        - a body object, which can be anything else Klein understands; for
          example, an IResource, an IRenderable, str, bytes, etc.

    @since: Klein NEXT
    """

    code: int = ...
    headers: Mapping[
        Union[str, bytes], Union[str, bytes, Sequence[Union[str, bytes]]]
    ] = ...
    body: Any = ...
